CREATE DATABASE OFFICIAL_PROJECT;
USE OFFICIAL_PROJECT;

-- Q1--

CREATE TABLE SALES_PEOPLE(
S_NUM INT UNSIGNED PRIMARY KEY,
S_NAME VARCHAR(25),
CITY VARCHAR(25),
COMM DECIMAL (10,2));


SELECT * FROM SALES_PEOPLE;

INSERT INTO SALES_PEOPLE VALUES
(1001,'Peel','London',0.12),
(1002,'Serres','San Jose',0.13),
(1003,'Axelrod','New York',0.10),
(1004,'Motika','London',0.11),
(1007,'Rafkin','Barcelona',0.15);

DROP TABLE CUSTOMERS;

-- Q2 --

CREATE TABLE CUSTOMERS(
C_NUM INT UNSIGNED PRIMARY KEY,
C_NAME VARCHAR(25),
CITY VARCHAR(25),
RATING INT,
S_NUM INT  UNSIGNED,
FOREIGN KEY (S_NUM) REFERENCES SALES_PEOPLE(S_NUM));

INSERT INTO CUSTOMERS VALUES
(2001,'Hoffman','London',100,1001),
(2002,'Giovanne','Rome',200,1003),
(2003,'Liu','San Jose',300,1002),
(2004,'Grass','Berlin',100,1002),
(2006,'Clemens','London',300,1007),
(2007,'Pereira','Rome',100,1004),
(2008,'James','London',200,1007);


-- Q3 --


CREATE TABLE ORDERS (
O_NUM INT  UNSIGNED PRIMARY KEY,
AMT DECIMAL (10,2),
O_DATE DATE,
C_NUM INT UNSIGNED,
S_NUM INT UNSIGNED,
FOREIGN KEY (C_NUM) REFERENCES CUSTOMERS (C_NUM),
FOREIGN KEY (S_NUM) REFERENCES SALES_PEOPLE (S_NUM));

INSERT INTO ORDERS VALUES
(3001,18.69,'1994-10-03',2008,1007),
(3002,1900.10,'1994-10-03',2007,1004),
(3003,767.19,'1994-10-03',2001,1001),
(3005,5160.45,'1994-10-03',2003,1002),
(3006,1098.16,'1994-10-04',2008,1007),
(3007,75.75,'1994-10-05',2004,1002),
(3008,4723.00,'1994-10-05',2006,1001),
(3009,1713.23,'1994-10-04',2002,1003),
(3010,1309.95,'1994-10-06',2004,1002),
(3011,9891.88,'1994-10-06',2006,1001);


SELECT * FROM SALES_PEOPLE;
SELECT * FROM CUSTOMERS;
SELECT * FROM ORDERS;

SELECT COLUMN_NAME,CONSTRAINT_NAME FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE
WHERE TABLE_NAME ='SALES_PEOPLE';

SELECT COLUMN_NAME,CONSTRAINT_NAME FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE
WHERE TABLE_NAME ='CUSTOMERS';

SELECT COLUMN_NAME,CONSTRAINT_NAME FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE
WHERE TABLE_NAME ='ORDERS';


-- Q4--

SELECT * FROM SALES_PEOPLE,CUSTOMERS
WHERE SALES_PEOPLE.CITY=CUSTOMERS.CITY;

-- Q5--
SELECT C_NAME,S_NAME FROM SALES_PEOPLE,CUSTOMERS
WHERE SALES_PEOPLE.S_NUM=CUSTOMERS.S_NUM;

-- Q6 --
SELECT O_NUM,C_NAME,ORDERS.C_NUM,ORDERS.S_NUM FROM ORDERS,CUSTOMERS,SALES_PEOPLE
WHERE CUSTOMERS.CITY <> SALES_PEOPLE.CITY
AND ORDERS.C_NUM=CUSTOMERS.C_NUM
AND ORDERS.S_NUM=SALES_PEOPLE.S_NUM;

-- Q7 --
SELECT O_NUM,C_NAME FROM ORDERS,CUSTOMERS
WHERE ORDERS.C_NUM =CUSTOMERS.C_NUM;

-- Q8 --

SELECT * FROM CUSTOMERS
ORDER BY RATING;

-- Q9 --
SELECT A.S_NAME,B.C_NAME FROM SALES_PEOPLE A,CUSTOMERS B
WHERE A.S_NUM = B.S_NUM
GROUP BY S_NAME;

-- Q10 --
SELECT S_NUM,S_NAME FROM SALES_PEOPLE
GROUP BY CITY;

-- Q11--

DELIMITER //
CREATE PROCEDURE GET_DATA(IN VAR1 INT)
BEGIN
SELECT * FROM ORDERS 
WHERE C_NUM = VAR1;
END //
DELIMITER ;

CALL GET_DATA(2008);


-- Q12 --
SELECT* FROM ORDERS WHERE AMT >(SELECT AVG(AMT) FROM ORDERS  WHERE O_DATE ='1996-04-10');

SELECT O_DATE,AVG(AMT) FROM ORDERS WHERE O_DATE!='1996-04-10' GROUP BY O_DATE;

-- Q13 --

SELECT B.S_NAME,B.CITY,C.O_NUM FROM CUSTOMERS A,SALES_PEOPLE B,ORDERS C 
WHERE A.S_NUM=B.S_NUM AND A.C_NUM=C.C_NUM AND B.CITY ='LONDON';

-- Q14 --

SELECT A.C_NUM,A.C_NAME,B.S_NUM,B.S_NAME FROM CUSTOMERS A,SALES_PEOPLE B WHERE B.S_NUM+1000=A.C_NUM;


-- Q15 --

SELECT C_NUM,RATING FROM CUSTOMERS WHERE RATING > (SELECT AVG(RATING) FROM CUSTOMER WHERE CITY ='SANJOSE');



-- Q16 --

SELECT S_NAME FROM SALES_PEOPLE GROUP BY C_NUM;

SELECT * FROM SALES_PEOPLE
WHERE S_NUM IN (SELECT DISTINCT S_NUM FROM CUSTOMERS A
WHERE EXISTS 
           (SELECT * FROM CUSTOMERS B
           WHERE B.S_NUM=A.S_NUM AND B.C_NUM <> A.C_NUM));
               
                                                         -- SET-2 --

-- Q1 --


CREATE TABLE EMPLOYEE(
EMP_NO INT PRIMARY KEY UNIQUE,
EMP_NAME VARCHAR(25),
JOB VARCHAR(25) DEFAULT 'CLERK',
MGR INT,
HIRE_DATE DATE,
SALARY DECIMAL (10,2) NOT NULL,
COMM DECIMAL (10,2),
DEPT_NO INT UNSIGNED,
FOREIGN KEY (DEPT_NO) REFERENCES DEPARTMENT(DEPT_NO));

INSERT INTO EMPLOYEE VALUES
(7369,'SMITH','CLERK',7902,'1890-12-17',800,NULL,20),
(7499,'ALLEN','SALESMAN',7698,'1981-02-20',1600.00,300.00,30),
(7521,'WARD','SALESMAN',7698,'1981-02-22',1250.00,500.00,30),
(7566,'JONES','MANAGER',7839,'1981-04-02',2975.00,NULL,20),
(7654,'MARTIN','SALESMAN',7698,'1981-09-28',1250.00,1400.00,30),
(7698,'BLAKE','MANAGER',7839,'1981-05-01',2850.00,NULL,30),
(7782,'CLARK','MANAGER',7839,'1981-06-09',2450.00,NULL,10),
(7788,'SCOTT','ANALYST',7566,'1987-04-19',3000.00,NULL,20),
(7839,'KING','PRESIDENT',NULL,'1981-11-17',5000.00,NULL,10),
(7844,'TURNER','SALESMAN',7698,'1981-09-08',1500.00,0.00,30),
(7876,'ADAMS','CLERK',7788,'1987-05-23',1100.00,NULL,20),
(7900,'JAMES','CLERK',7698,'1981-12-03',950.00,NULL,30),
(7902,'FORD','ANALYST',7566,'1981-12-03',3000.00,NULL,20),
(7934,'MILLER','CLERK',7782,'1982-01-23',1300.00,NULL,10);



SELECT * FROM EMPLOYEE;

-- Q2 --

CREATE TABLE DEPARTMENT(
DEPT_NO INT UNSIGNED PRIMARY KEY,
DEPT_NAME VARCHAR(25),
LOCATION VARCHAR (25));


INSERT INTO DEPARTMENT VALUES
(10,'OPERATIONS','BOSTON'),
(20,'RESEARCH','DALLAS'),
(30,'SALES','CHICAGO'),
(40,'ACCOUNTING','NEW YORK');

SELECT COLUMN_NAME,CONSTRAINT_NAME FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE
WHERE TABLE_NAME ='EMPLOYEE';

-- Q3 --

SELECT EMP_NAME,SALARY FROM EMPLOYEE
WHERE SALARY > 1000;

-- Q4 --

SELECT * FROM EMPLOYEE
WHERE HIRE_DATE < '1981-09-08';

-- Q5 --

SELECT EMP_NAME FROM EMPLOYEE
WHERE EMP_NAME LIKE '_I%';


SELECT EMP_NAME FROM EMPLOYEE
WHERE EMP_NAME LIKE '_L%';



-- Q6 --


SELECT EMP_NO,SALARY, 
(SALARY/100*40) AS ALLOWANCES,
(SALARY/100*10) AS P_F,
SALARY+SALARY/100*40-SALARY/100*10 AS NET_SALARY
 FROM EMPLOYEE;


-- Q7 --

SELECT EMP_NAME,JOB FROM EMPLOYEE
WHERE MGR IS NULL;

-- Q8 --

SELECT EMP_NO,EMP_NAME,SALARY FROM EMPLOYEE ORDER BY SALARY ASC;

-- Q9 --

SELECT COUNT(JOB) FROM EMPLOYEE;

-- Q10 --

SELECT  SUM(SALARY) FROM EMPLOYEE
ORDER BY 'SALESMAN';

SELECT SUM(SALARY) FROM EMPLOYEE
GROUP BY 'SALESMAN';

-- Q11 --
 
SELECT JOB, AVG(SALARY) AS AVERAGE_SALARY FROM EMPLOYEE
GROUP BY JOB,DEPT_NO;

-- Q12 --

SELECT EMP_NAME,SALARY,DEPT_NAME FROM EMPLOYEE,DEPARTMENT
WHERE EMPLOYEE.DEPT_NO=DEPARTMENT.DEPT_NO;

-- Q13 --

CREATE TABLE GRADES(
GRADE VARCHAR (5),
LOWEST_SAL INT,
HIGHEST_SAL INT);

SELECT * FROM GRADES;

INSERT INTO GRADES VALUES
('A',0,999),
('B',1000,1999),
('C',2000,2999),
('D',3000,3999),
('E',4000,5000);


-- Q14 --

SELECT EMP_NAME,SALARY,GRADE FROM EMPLOYEE,GRADES
WHERE SALARY BETWEEN  LOWEST_SAL AND HIGHEST_SAL;


-- Q15 --

SELECT EMP_NAME,MGR FROM EMPLOYEE
ORDER BY EMP_NO=MGR;

-- Q16 --

SELECT EMP_NAME,(SALARY+COMM) AS TOTAL_SALARY FROM EMPLOYEE;

SELECT EMP_NAME,TOTAL_SALARY FROM EMPLOYEE
WHERE (SALARY+COMM) = TOTAL_SALARY ;


-- Q17 --

SELECT EMP_NO,EMP_NAME,SALARY FROM EMPLOYEE
WHERE MOD(EMP_NO,2)!=0;

-- Q18 --

SELECT EMP_NAME,DEPT_NAME,
RANK () OVER (ORDER BY SALARY DESC) AS RANK_OF_SAL_ORG,
DENSE_RANK () OVER (PARTITION BY DEPT_NAME ORDER BY SALARY DESC) AS RANK_OF_SAL_DEPT
FROM EMPLOYEE,DEPARTMENT;


-- Q19 --

SELECT EMP_NAME,SALARY FROM  EMPLOYEE ORDER BY SALARY DESC LIMIT 3;


-- Q20 --

SELECT EMP_NAME,JOB,MAX(SALARY) FROM EMPLOYEE GROUP BY JOB;














